@model Friseur.ViewModels.AssignSystemRoleViewModel

<a href="#" class="btn btn-primary btn-md" data-toggle="modal" data-target="#ModalAssignRole">
	<i class="fa fa-plus fa-lg" aria-hidden="true"></i>
	Assign Role
</a>

<div class="modal fade" id="ModalAssignRole">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<a href="#" class="close" data-dismiss="modal">&times;</a>
				<h3 class="modal-title">Assign Role</h3>
			</div>
			<div class="modal-body">
				<form id="AssignRoleForm">
					@Html.AntiForgeryToken()
					<div class="form-horizontal">
						<hr />
						@Html.ValidationSummary(true, "", new { @class = "text-danger" })

						<div class="form-group">
							@Html.LabelFor(model => model.Users, "User", htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.DropDownListFor(m => m.Users, new SelectList(Model.Users, "Id", "UserName"), "Please Select", new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.Users, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="form-group">
							@Html.LabelFor(model => model.Roles, "Role", htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@*@Html.DropDownListFor(model => Model.Roles, new SelectList(Model.Roles, "Id", "Name"), "Please Select", new { @id = "Roles", @class = "form-control required" })*@
								@Html.DropDownListFor(x => x.Roles, new SelectList(Model.Roles, "Id", "Name"), "Please Select", new { @id = "Roles", @class = "form-control required" })
								@Html.ValidationMessageFor(model => Model.Roles, "", new { @class = "text-danger" })
							</div>
						</div>


						<div class="form-group">
							@Html.LabelFor(model => model.Id, "Topic", htmlAttributes: new { @class = "control-label col-md-2" })
							<div class="col-md-10">
								@Html.DropDownList("Id", null, htmlAttributes: new { @id = "", @class = "form-control" })
								@Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
							</div>
						</div>



					</div>




			<div class="modal-footer">
				<input type="reset" value="Cancel" class="btn btn-default" data-dismiss="modal" />
				<input type="button" value="Save" class="btn btn-default" id="btnSubmit5" />
			</div>
			</form>
		</div>
		</div>
	</div>
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}


<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script>
	$(document).ready(function () {

		$("#btnSubmit5").on("click", function () {
			if ($("#AssignRoleForm").valid()) {

				var data = $("#AssignRoleForm").serialize();
				$.ajax({
					type: "POST",
					url: "/Role/AssignRole",
					data: data,
					success: function (response) {
						toastr.options.onHidden = function () {
							window.location.reload();
						}
						toastr.options.positionClass = "toast-bottom-full-width";
						toastr.options.progressBar = true;
						toastr.options.timeout = 0;
						toastr.options.extendedTimeOut = 0;
						toastr.options.fadeOut = 500;
						toastr.options.tapToDismiss = false;
						toastr.success("User role assigned successfully");
						$("#ModalAssignRole").modal("hide");
						$("#AssignRoleForm")[0].reset();
					},
					error: function (response) {
						toastr.options.positionClass = "toast-bottom-full-width";
						toastr.options.progressBar = true;
						toastr.options.timeout = 0;
						toastr.options.extendedTimeOut = 0;
						toastr.options.fadeOut = 500;
						toastr.options.tapToDismiss = false;
						toastr.error("Oops, There has been a problem, the system adminstrators have been notified.");
						$("#ModalAssignRole").modal("hide");
						$("#AssignRoleForm")[0].reset();
					}
				})

			}
		})
	});
</script>

<script>
	$(document).ready(function () {
		$('#AssignRoleForm').validate({
			errorClass: 'help-block animation-slideDown',
			errorElement: 'div',
			errorPlacement: function (error, e) {
				e.parents('.form-group > div').append(error);
			},
			highlight: function (e) {
				$(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
				$(e).closest('.help-block').remove();
			},
			success: function (e) {
				e.closest('.form-group').removeClass('has-success has-error');
				e.closest('.help-block').remove();
			},
			rules: {
				'Users': {
					required: true,
				},
				'Roles': {
					required: true,
				}

			},
			messages: {
				'Users': {
					required: 'Please select user',
				},
				'Roles': {
					required: 'Please select role',
				}

			}
		});
	});

</script>
